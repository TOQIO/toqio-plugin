{"version":3,"sources":["App.js","index.js"],"names":["isEmpty","obj","Object","keys","length","App","useState","userInfo","setUserInfo","useEffect","window","addEventListener","event","data","id","jwt","jwt_decode","className","title","showDivider","message","onClose","variant","firstName","lastName","label","value","user_id","company_id","role","ReactDOM","render","document","getElementById"],"mappings":"qMAcMA,EAAU,SAACC,GAAD,OAAqC,IAA5BC,OAAOC,KAAKF,GAAKG,QAoF3BC,MAjFf,WAAgB,IAAD,IAEb,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAiBA,OAdAC,qBAAU,WACRC,OAAOC,iBAAiB,WAAW,SAAUC,GAAQ,IAAD,IAE1B,eAAf,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOC,YAAP,eAAaC,KAEV,OAAIF,QAAJ,IAAIA,GAAJ,UAAIA,EAAOC,YAAX,OAAI,EAAaE,KACtBP,EAAYQ,YAAWJ,EAAMC,KAAKE,WAIrC,IAKD,sBAAKE,UAAU,gBAAf,UAEE,cAAC,IAAD,CACEC,MAAO,mBACPC,aAAa,KAIbnB,EAAQO,IACR,cAAC,IAAD,CACEU,UAAU,wBACVG,QAAQ,oEACRC,QAAS,aACTC,QAAQ,YAeZ,eAAC,IAAD,WACE,eAAC,IAAD,6BAAsBf,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAUM,YAAhC,aAAsB,EAAgBU,UAAtC,WAAkDhB,QAAlD,IAAkDA,GAAlD,UAAkDA,EAAUM,YAA5D,aAAkD,EAAgBW,YAGlE,cAAC,IAAD,CACEC,MAAM,eACNC,MAAQ1B,EAAQO,GAEZ,cAAC,IAAD,CAAMe,QAAQ,SAAd,2BADA,cAAC,IAAD,0BAKN,cAAC,IAAD,CACEG,MAAM,WACNC,MAAOnB,EAASoB,UAIlB,cAAC,IAAD,CACEF,MAAM,cACNC,MAAOnB,EAASqB,aAIlB,cAAC,IAAD,CACEH,MAAM,QACNC,MAAOnB,EAASsB,c,cCrF1BC,EAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.314a564e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport {\n  PageHeader,\n  BigTextBold,\n  Chip,\n  DataPanel,\n  DataItem,\n  FeedbackNotification\n} from '@toqio/toqio-web-components';\n\nimport './App.css';\n\n\nconst isEmpty = (obj) => Object.keys(obj).length === 0;\n\n\nfunction App() {\n\n  const [userInfo, setUserInfo] = useState({});\n\n  // Get JWT from TOQIO\n  useEffect(() => {\n    window.addEventListener(\"message\", function (event) {\n      // If it is not a JWT event we do nothing\n      if (event?.data?.id !== 'toqio-jwt') {\n        return;\n      } else if (event?.data?.jwt) {\n        setUserInfo(jwt_decode(event.data.jwt));\n      }\n    });\n\n  }, []);\n\n\n\n  return (\n    <div className=\"app-container\">\n      {/* PAGE HEADER */}\n      <PageHeader\n        title={'This is a plugin'}\n        showDivider={true}\n      />\n\n      {/* SUCCESSFULLY CONNECTED */}\n      {!isEmpty(userInfo) &&\n        <FeedbackNotification\n          className=\"feedback-notification\"\n          message=\"The connexion has been established. You can start using your JWT!\"\n          onClose={() => { }}\n          variant=\"success\"\n        />\n      }\n\n      {/* CONEXION ERROR */}\n      {/* {isEmpty(userInfo) &&\n        <FeedbackNotification\n          className=\"feedback-notification\"\n          message=\"Sorry, the conexion has failed.\"\n          onClose={() => { }}\n          variant=\"error\"\n        />\n      } */}\n\n      {/* INFO PANEL */}\n      <DataPanel>\n        <BigTextBold>Welcome {userInfo?.data?.firstName} {userInfo?.data?.lastName}</BigTextBold>\n\n        {/* AUTH STATUS */}\n        <DataItem\n          label=\"Auth status:\"\n          value={!isEmpty(userInfo)\n            ? <Chip>Connected</Chip>\n            : <Chip variant='danger'>Not Connected</Chip>}\n        />\n\n        {/* USER ID */}\n        <DataItem\n          label=\"User id:\"\n          value={userInfo.user_id}\n        />\n\n        {/* COMPANY ID */}\n        <DataItem\n          label=\"Company id:\"\n          value={userInfo.company_id}\n        />\n\n        {/* ROLE */}\n        <DataItem\n          label=\"Role:\"\n          value={userInfo.role}\n        />\n      </DataPanel>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport './index.css';\nimport App from './App';\n\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}